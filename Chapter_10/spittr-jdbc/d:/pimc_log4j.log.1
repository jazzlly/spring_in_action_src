2017-08-13 14:39:08,388 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:39:08,389 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:39:08,389 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:39:08,389 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:39:08,390 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:39:08,390 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:39:08,390 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:39:08,390 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:39:08,390 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:39:08,391 DEBUG [main] (AbstractAutoProxyCreator.java:593) - Creating implicit proxy for bean 'seller' with 0 common interceptors and 4 specific interceptors
2017-08-13 14:39:08,391 DEBUG [main] (CglibAopProxy.java:158) - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.baobaotao.SmartSeller@4afcd809]
2017-08-13 14:39:08,392 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public void com.baobaotao.SmartSeller.checkBill(int)
2017-08-13 14:39:08,392 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public int com.baobaotao.SmartSeller.sell(java.lang.String,java.lang.String)
2017-08-13 14:39:08,393 DEBUG [main] (CglibAopProxy.java:773) - Found finalize() method - using NO_OVERRIDE
2017-08-13 14:39:08,393 DEBUG [main] (CglibAopProxy.java:785) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-08-13 14:39:08,393 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-08-13 14:39:08,393 DEBUG [main] (CglibAopProxy.java:790) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-08-13 14:39:08,394 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-08-13 14:39:08,394 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-08-13 14:39:08,394 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-08-13 14:39:08,394 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-08-13 14:39:08,395 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:39:08,395 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:39:08,395 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-08-13 14:39:08,395 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-08-13 14:39:08,395 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-08-13 14:39:08,396 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:39:08,396 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-08-13 14:39:08,396 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:39:08,396 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-08-13 14:39:08,396 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-08-13 14:39:08,397 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-08-13 14:39:08,397 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-08-13 14:39:08,397 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:39:08,397 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:39:08,397 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-08-13 14:39:08,398 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-08-13 14:39:08,398 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-08-13 14:39:08,398 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-08-13 14:39:08,398 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-08-13 14:39:08,398 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-08-13 14:39:08,405 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:477) - Finished creating instance of bean 'seller'
2017-08-13 14:39:08,406 DEBUG [main] (DefaultSingletonBeanRegistry.java:220) - Creating shared instance of singleton bean 'waiterManager'
2017-08-13 14:39:08,406 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'waiterManager'
2017-08-13 14:39:08,406 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'waiterManager' to allow for resolving potential circular references
2017-08-13 14:39:08,408 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:39:08,409 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:39:08,409 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:39:08,409 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:39:08,409 DEBUG [main] (AbstractAutoProxyCreator.java:593) - Creating implicit proxy for bean 'waiterManager' with 0 common interceptors and 3 specific interceptors
2017-08-13 14:39:08,410 DEBUG [main] (CglibAopProxy.java:158) - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.baobaotao.WaiterManager@6a78afa0]
2017-08-13 14:39:08,410 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public void com.baobaotao.WaiterManager.addNaiveWaiter(com.baobaotao.NaiveWaiter)
2017-08-13 14:39:08,411 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public void com.baobaotao.WaiterManager.addWaiter(com.baobaotao.Waiter)
2017-08-13 14:39:08,411 DEBUG [main] (CglibAopProxy.java:773) - Found finalize() method - using NO_OVERRIDE
2017-08-13 14:39:08,411 DEBUG [main] (CglibAopProxy.java:785) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-08-13 14:39:08,411 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-08-13 14:39:08,412 DEBUG [main] (CglibAopProxy.java:790) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-08-13 14:39:08,412 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-08-13 14:39:08,412 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-08-13 14:39:08,412 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-08-13 14:39:08,412 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-08-13 14:39:08,413 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:39:08,413 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:39:08,413 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-08-13 14:39:08,413 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-08-13 14:39:08,413 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-08-13 14:39:08,414 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:39:08,414 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-08-13 14:39:08,414 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:39:08,414 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-08-13 14:39:08,414 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-08-13 14:39:08,415 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-08-13 14:39:08,415 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-08-13 14:39:08,415 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:39:08,415 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:39:08,415 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-08-13 14:39:08,415 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-08-13 14:39:08,416 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-08-13 14:39:08,416 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-08-13 14:39:08,416 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-08-13 14:39:08,416 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-08-13 14:39:08,423 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:477) - Finished creating instance of bean 'waiterManager'
2017-08-13 14:39:08,423 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:39:08,424 DEBUG [main] (DefaultSingletonBeanRegistry.java:220) - Creating shared instance of singleton bean 'com.baobaotao.aspectj.fun.EnableSellerAspect#0'
2017-08-13 14:39:08,424 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'com.baobaotao.aspectj.fun.EnableSellerAspect#0'
2017-08-13 14:39:08,424 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'com.baobaotao.aspectj.fun.EnableSellerAspect#0' to allow for resolving potential circular references
2017-08-13 14:39:08,425 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:477) - Finished creating instance of bean 'com.baobaotao.aspectj.fun.EnableSellerAspect#0'
2017-08-13 14:39:08,427 DEBUG [main] (AbstractApplicationContext.java:702) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@7c6908d7]
2017-08-13 14:39:08,427 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'lifecycleProcessor'
2017-08-13 14:39:08,429 DEBUG [main] (PropertySourcesPropertyResolver.java:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2017-08-13 14:39:08,429 DEBUG [main] (PropertySourcesPropertyResolver.java:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2017-08-13 14:39:08,430 DEBUG [main] (PropertySourcesPropertyResolver.java:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2017-08-13 14:39:08,430 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'naiveWaiter'
2017-08-13 14:39:08,430 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'naughtyWaiter'
2017-08-13 14:39:08,433 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:34,066 DEBUG [main] (MutablePropertySources.java:111) - Adding [systemProperties] PropertySource with lowest search precedence
2017-08-13 14:40:34,071 DEBUG [main] (MutablePropertySources.java:111) - Adding [systemEnvironment] PropertySource with lowest search precedence
2017-08-13 14:40:34,072 DEBUG [main] (AbstractEnvironment.java:126) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2017-08-13 14:40:34,076  INFO [main] (AbstractApplicationContext.java:515) - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@156643d4: startup date [Sun Aug 13 14:40:34 CST 2017]; root of context hierarchy
2017-08-13 14:40:34,105 DEBUG [main] (MutablePropertySources.java:111) - Adding [systemProperties] PropertySource with lowest search precedence
2017-08-13 14:40:34,105 DEBUG [main] (MutablePropertySources.java:111) - Adding [systemEnvironment] PropertySource with lowest search precedence
2017-08-13 14:40:34,105 DEBUG [main] (AbstractEnvironment.java:126) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2017-08-13 14:40:34,114  INFO [main] (XmlBeanDefinitionReader.java:316) - Loading XML bean definitions from class path resource [fun.xml]
2017-08-13 14:40:34,130 DEBUG [main] (DefaultDocumentLoader.java:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-08-13 14:40:34,159 DEBUG [main] (PluggableSchemaResolver.java:141) - Loading schema mappings from [META-INF/spring.schemas]
2017-08-13 14:40:34,162 DEBUG [main] (PluggableSchemaResolver.java:147) - Loaded schema mappings: {http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
2017-08-13 14:40:34,163 DEBUG [main] (PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2017-08-13 14:40:34,197 DEBUG [main] (PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/aop/spring-aop-3.0.xsd] in classpath: org/springframework/aop/config/spring-aop-3.0.xsd
2017-08-13 14:40:34,203 DEBUG [main] (PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2017-08-13 14:40:34,215 DEBUG [main] (DefaultBeanDefinitionDocumentReader.java:108) - Loading bean definitions
2017-08-13 14:40:34,225 DEBUG [main] (DefaultNamespaceHandlerResolver.java:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2017-08-13 14:40:34,239 DEBUG [main] (BeanDefinitionParserDelegate.java:495) - Neither XML 'id' nor 'name' specified - using generated bean name [com.baobaotao.aspectj.fun.TestAspect#0]
2017-08-13 14:40:34,240 DEBUG [main] (BeanDefinitionParserDelegate.java:495) - Neither XML 'id' nor 'name' specified - using generated bean name [com.baobaotao.aspectj.fun.EnableSellerAspect#0]
2017-08-13 14:40:34,240 DEBUG [main] (AbstractBeanDefinitionReader.java:223) - Loaded 7 bean definitions from location pattern [fun.xml]
2017-08-13 14:40:34,240 DEBUG [main] (AbstractApplicationContext.java:545) - Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@156643d4: org.springframework.beans.factory.support.DefaultListableBeanFactory@13deb50e: defining beans [org.springframework.aop.config.internalAutoProxyCreator,naiveWaiter,naughtyWaiter,seller,waiterManager,com.baobaotao.aspectj.fun.TestAspect#0,com.baobaotao.aspectj.fun.EnableSellerAspect#0]; root of factory hierarchy
2017-08-13 14:40:34,252 DEBUG [main] (DefaultSingletonBeanRegistry.java:220) - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-08-13 14:40:34,253 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-08-13 14:40:34,287 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-08-13 14:40:34,312 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:477) - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-08-13 14:40:34,314 DEBUG [main] (AbstractApplicationContext.java:651) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@5f3a4b84]
2017-08-13 14:40:34,315 DEBUG [main] (AbstractApplicationContext.java:675) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@50d0686]
2017-08-13 14:40:34,317 DEBUG [main] (DefaultListableBeanFactory.java:672) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@13deb50e: defining beans [org.springframework.aop.config.internalAutoProxyCreator,naiveWaiter,naughtyWaiter,seller,waiterManager,com.baobaotao.aspectj.fun.TestAspect#0,com.baobaotao.aspectj.fun.EnableSellerAspect#0]; root of factory hierarchy
2017-08-13 14:40:34,318 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-08-13 14:40:34,318 DEBUG [main] (DefaultSingletonBeanRegistry.java:220) - Creating shared instance of singleton bean 'naiveWaiter'
2017-08-13 14:40:34,318 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'naiveWaiter'
2017-08-13 14:40:34,347 DEBUG [main] (ReflectiveAspectJAdvisorFactory.java:221) - Found AspectJ method: public void com.baobaotao.aspectj.fun.TestAspect.allPublicFun()
2017-08-13 14:40:34,348 DEBUG [main] (ReflectiveAspectJAdvisorFactory.java:221) - Found AspectJ method: public void com.baobaotao.aspectj.fun.TestAspect.atAnnotaionTest()
2017-08-13 14:40:34,349 DEBUG [main] (ReflectiveAspectJAdvisorFactory.java:221) - Found AspectJ method: public void com.baobaotao.aspectj.fun.TestAspect.thisTest()
2017-08-13 14:40:34,412 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'naiveWaiter' to allow for resolving potential circular references
2017-08-13 14:40:34,489 DEBUG [main] (DefaultSingletonBeanRegistry.java:220) - Creating shared instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:34,489 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:34,489 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'com.baobaotao.aspectj.fun.TestAspect#0' to allow for resolving potential circular references
2017-08-13 14:40:34,491 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:477) - Finished creating instance of bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:34,491 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:34,492 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:34,492 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:34,492 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:34,493 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:34,494 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:34,494 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:34,495 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:34,495 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:34,495 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:34,495 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:34,500 DEBUG [main] (AbstractAutoProxyCreator.java:593) - Creating implicit proxy for bean 'naiveWaiter' with 0 common interceptors and 5 specific interceptors
2017-08-13 14:40:34,504 DEBUG [main] (CglibAopProxy.java:158) - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.baobaotao.NaiveWaiter@619713e5]
2017-08-13 14:40:34,576 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public void com.baobaotao.NaiveWaiter.smile(java.lang.String,int)
2017-08-13 14:40:34,578 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public void com.baobaotao.NaiveWaiter.serveTo(java.lang.String)
2017-08-13 14:40:34,579 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public void com.baobaotao.NaiveWaiter.greetTo(java.lang.String)
2017-08-13 14:40:34,580 DEBUG [main] (CglibAopProxy.java:773) - Found finalize() method - using NO_OVERRIDE
2017-08-13 14:40:34,580 DEBUG [main] (CglibAopProxy.java:785) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-08-13 14:40:34,582 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-08-13 14:40:34,582 DEBUG [main] (CglibAopProxy.java:790) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-08-13 14:40:34,583 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-08-13 14:40:34,585 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public abstract int com.baobaotao.Seller.sell(java.lang.String,java.lang.String)
2017-08-13 14:40:34,585 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-08-13 14:40:34,585 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-08-13 14:40:34,586 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-08-13 14:40:34,586 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-08-13 14:40:34,586 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-08-13 14:40:34,586 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-08-13 14:40:34,587 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:34,587 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:34,587 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-08-13 14:40:34,587 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-08-13 14:40:34,588 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-08-13 14:40:34,588 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-08-13 14:40:34,588 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:34,588 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:34,589 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-08-13 14:40:34,589 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-08-13 14:40:34,589 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-08-13 14:40:34,589 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-08-13 14:40:34,590 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:34,590 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:34,590 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-08-13 14:40:34,590 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-08-13 14:40:34,590 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-08-13 14:40:34,607 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:477) - Finished creating instance of bean 'naiveWaiter'
2017-08-13 14:40:34,607 DEBUG [main] (DefaultSingletonBeanRegistry.java:220) - Creating shared instance of singleton bean 'naughtyWaiter'
2017-08-13 14:40:34,607 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'naughtyWaiter'
2017-08-13 14:40:34,608 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'naughtyWaiter' to allow for resolving potential circular references
2017-08-13 14:40:34,618 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:34,619 DEBUG [main] (AbstractAutoProxyCreator.java:593) - Creating implicit proxy for bean 'naughtyWaiter' with 0 common interceptors and 2 specific interceptors
2017-08-13 14:40:34,619 DEBUG [main] (CglibAopProxy.java:158) - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.baobaotao.NaughtyWaiter@279fedbd]
2017-08-13 14:40:34,620 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public void com.baobaotao.NaughtyWaiter.joke(java.lang.String,int)
2017-08-13 14:40:34,620 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public void com.baobaotao.NaughtyWaiter.serveTo(java.lang.String)
2017-08-13 14:40:34,620 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public void com.baobaotao.NaughtyWaiter.greetTo(java.lang.String)
2017-08-13 14:40:34,621 DEBUG [main] (CglibAopProxy.java:773) - Found finalize() method - using NO_OVERRIDE
2017-08-13 14:40:34,621 DEBUG [main] (CglibAopProxy.java:785) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-08-13 14:40:34,621 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-08-13 14:40:34,621 DEBUG [main] (CglibAopProxy.java:790) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-08-13 14:40:34,624 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-08-13 14:40:34,624 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-08-13 14:40:34,624 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-08-13 14:40:34,624 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-08-13 14:40:34,625 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-08-13 14:40:34,625 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-08-13 14:40:34,625 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-08-13 14:40:34,625 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:34,626 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:34,626 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-08-13 14:40:34,626 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-08-13 14:40:34,626 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-08-13 14:40:34,626 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-08-13 14:40:34,627 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:34,627 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:34,627 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-08-13 14:40:34,627 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-08-13 14:40:34,628 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-08-13 14:40:34,628 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-08-13 14:40:34,628 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:34,628 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:34,628 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-08-13 14:40:34,629 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-08-13 14:40:34,629 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-08-13 14:40:34,637 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:477) - Finished creating instance of bean 'naughtyWaiter'
2017-08-13 14:40:34,637 DEBUG [main] (DefaultSingletonBeanRegistry.java:220) - Creating shared instance of singleton bean 'seller'
2017-08-13 14:40:34,637 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'seller'
2017-08-13 14:40:34,638 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'seller' to allow for resolving potential circular references
2017-08-13 14:40:34,640 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:34,640 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:34,641 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:34,641 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:34,641 DEBUG [main] (AbstractAutoProxyCreator.java:593) - Creating implicit proxy for bean 'seller' with 0 common interceptors and 3 specific interceptors
2017-08-13 14:40:34,641 DEBUG [main] (CglibAopProxy.java:158) - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.baobaotao.SmartSeller@587e5365]
2017-08-13 14:40:34,642 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public int com.baobaotao.SmartSeller.sell(java.lang.String,java.lang.String)
2017-08-13 14:40:34,643 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public void com.baobaotao.SmartSeller.checkBill(int)
2017-08-13 14:40:34,643 DEBUG [main] (CglibAopProxy.java:773) - Found finalize() method - using NO_OVERRIDE
2017-08-13 14:40:34,643 DEBUG [main] (CglibAopProxy.java:785) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-08-13 14:40:34,644 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-08-13 14:40:34,644 DEBUG [main] (CglibAopProxy.java:790) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-08-13 14:40:34,645 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-08-13 14:40:34,646 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-08-13 14:40:34,646 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-08-13 14:40:34,646 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-08-13 14:40:34,647 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-08-13 14:40:34,647 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-08-13 14:40:34,647 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-08-13 14:40:34,647 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:34,648 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:34,648 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-08-13 14:40:34,648 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-08-13 14:40:34,648 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-08-13 14:40:34,648 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-08-13 14:40:34,649 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:34,649 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:34,649 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-08-13 14:40:34,649 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-08-13 14:40:34,649 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-08-13 14:40:34,649 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-08-13 14:40:34,650 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:34,650 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:34,650 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-08-13 14:40:34,650 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-08-13 14:40:34,650 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-08-13 14:40:34,660 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:477) - Finished creating instance of bean 'seller'
2017-08-13 14:40:34,660 DEBUG [main] (DefaultSingletonBeanRegistry.java:220) - Creating shared instance of singleton bean 'waiterManager'
2017-08-13 14:40:34,660 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'waiterManager'
2017-08-13 14:40:34,660 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'waiterManager' to allow for resolving potential circular references
2017-08-13 14:40:34,663 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:34,663 DEBUG [main] (AbstractAutoProxyCreator.java:593) - Creating implicit proxy for bean 'waiterManager' with 0 common interceptors and 2 specific interceptors
2017-08-13 14:40:34,663 DEBUG [main] (CglibAopProxy.java:158) - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.baobaotao.WaiterManager@1e178745]
2017-08-13 14:40:34,664 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public void com.baobaotao.WaiterManager.addNaiveWaiter(com.baobaotao.NaiveWaiter)
2017-08-13 14:40:34,665 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public void com.baobaotao.WaiterManager.addWaiter(com.baobaotao.Waiter)
2017-08-13 14:40:34,665 DEBUG [main] (CglibAopProxy.java:773) - Found finalize() method - using NO_OVERRIDE
2017-08-13 14:40:34,667 DEBUG [main] (CglibAopProxy.java:785) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-08-13 14:40:34,668 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-08-13 14:40:34,668 DEBUG [main] (CglibAopProxy.java:790) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-08-13 14:40:34,668 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-08-13 14:40:34,669 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-08-13 14:40:34,669 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-08-13 14:40:34,669 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-08-13 14:40:34,669 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-08-13 14:40:34,669 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-08-13 14:40:34,670 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-08-13 14:40:34,670 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:34,670 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:34,670 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-08-13 14:40:34,670 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-08-13 14:40:34,671 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-08-13 14:40:34,671 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-08-13 14:40:34,673 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:34,675 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:34,675 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-08-13 14:40:34,676 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-08-13 14:40:34,677 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-08-13 14:40:34,677 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-08-13 14:40:34,677 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:34,677 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:34,678 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-08-13 14:40:34,679 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-08-13 14:40:34,681 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-08-13 14:40:34,694 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:477) - Finished creating instance of bean 'waiterManager'
2017-08-13 14:40:34,695 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:34,695 DEBUG [main] (DefaultSingletonBeanRegistry.java:220) - Creating shared instance of singleton bean 'com.baobaotao.aspectj.fun.EnableSellerAspect#0'
2017-08-13 14:40:34,695 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'com.baobaotao.aspectj.fun.EnableSellerAspect#0'
2017-08-13 14:40:34,695 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'com.baobaotao.aspectj.fun.EnableSellerAspect#0' to allow for resolving potential circular references
2017-08-13 14:40:34,697 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:477) - Finished creating instance of bean 'com.baobaotao.aspectj.fun.EnableSellerAspect#0'
2017-08-13 14:40:34,698 DEBUG [main] (AbstractApplicationContext.java:702) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@7b02881e]
2017-08-13 14:40:34,699 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'lifecycleProcessor'
2017-08-13 14:40:34,702 DEBUG [main] (PropertySourcesPropertyResolver.java:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2017-08-13 14:40:34,702 DEBUG [main] (PropertySourcesPropertyResolver.java:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2017-08-13 14:40:34,703 DEBUG [main] (PropertySourcesPropertyResolver.java:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2017-08-13 14:40:34,703 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'naiveWaiter'
2017-08-13 14:40:34,704 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'naughtyWaiter'
2017-08-13 14:40:34,708 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:57,257 DEBUG [main] (MutablePropertySources.java:111) - Adding [systemProperties] PropertySource with lowest search precedence
2017-08-13 14:40:57,262 DEBUG [main] (MutablePropertySources.java:111) - Adding [systemEnvironment] PropertySource with lowest search precedence
2017-08-13 14:40:57,263 DEBUG [main] (AbstractEnvironment.java:126) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2017-08-13 14:40:57,269  INFO [main] (AbstractApplicationContext.java:515) - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@156643d4: startup date [Sun Aug 13 14:40:57 CST 2017]; root of context hierarchy
2017-08-13 14:40:57,305 DEBUG [main] (MutablePropertySources.java:111) - Adding [systemProperties] PropertySource with lowest search precedence
2017-08-13 14:40:57,306 DEBUG [main] (MutablePropertySources.java:111) - Adding [systemEnvironment] PropertySource with lowest search precedence
2017-08-13 14:40:57,307 DEBUG [main] (AbstractEnvironment.java:126) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2017-08-13 14:40:57,318  INFO [main] (XmlBeanDefinitionReader.java:316) - Loading XML bean definitions from class path resource [fun.xml]
2017-08-13 14:40:57,340 DEBUG [main] (DefaultDocumentLoader.java:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-08-13 14:40:57,366 DEBUG [main] (PluggableSchemaResolver.java:141) - Loading schema mappings from [META-INF/spring.schemas]
2017-08-13 14:40:57,369 DEBUG [main] (PluggableSchemaResolver.java:147) - Loaded schema mappings: {http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
2017-08-13 14:40:57,370 DEBUG [main] (PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2017-08-13 14:40:57,400 DEBUG [main] (PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/aop/spring-aop-3.0.xsd] in classpath: org/springframework/aop/config/spring-aop-3.0.xsd
2017-08-13 14:40:57,407 DEBUG [main] (PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2017-08-13 14:40:57,418 DEBUG [main] (DefaultBeanDefinitionDocumentReader.java:108) - Loading bean definitions
2017-08-13 14:40:57,426 DEBUG [main] (DefaultNamespaceHandlerResolver.java:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2017-08-13 14:40:57,439 DEBUG [main] (BeanDefinitionParserDelegate.java:495) - Neither XML 'id' nor 'name' specified - using generated bean name [com.baobaotao.aspectj.fun.TestAspect#0]
2017-08-13 14:40:57,439 DEBUG [main] (BeanDefinitionParserDelegate.java:495) - Neither XML 'id' nor 'name' specified - using generated bean name [com.baobaotao.aspectj.fun.EnableSellerAspect#0]
2017-08-13 14:40:57,440 DEBUG [main] (AbstractBeanDefinitionReader.java:223) - Loaded 7 bean definitions from location pattern [fun.xml]
2017-08-13 14:40:57,440 DEBUG [main] (AbstractApplicationContext.java:545) - Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@156643d4: org.springframework.beans.factory.support.DefaultListableBeanFactory@13deb50e: defining beans [org.springframework.aop.config.internalAutoProxyCreator,naiveWaiter,naughtyWaiter,seller,waiterManager,com.baobaotao.aspectj.fun.TestAspect#0,com.baobaotao.aspectj.fun.EnableSellerAspect#0]; root of factory hierarchy
2017-08-13 14:40:57,451 DEBUG [main] (DefaultSingletonBeanRegistry.java:220) - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-08-13 14:40:57,452 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-08-13 14:40:57,475 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-08-13 14:40:57,498 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:477) - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-08-13 14:40:57,501 DEBUG [main] (AbstractApplicationContext.java:651) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@5f3a4b84]
2017-08-13 14:40:57,503 DEBUG [main] (AbstractApplicationContext.java:675) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@50d0686]
2017-08-13 14:40:57,505 DEBUG [main] (DefaultListableBeanFactory.java:672) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@13deb50e: defining beans [org.springframework.aop.config.internalAutoProxyCreator,naiveWaiter,naughtyWaiter,seller,waiterManager,com.baobaotao.aspectj.fun.TestAspect#0,com.baobaotao.aspectj.fun.EnableSellerAspect#0]; root of factory hierarchy
2017-08-13 14:40:57,505 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-08-13 14:40:57,506 DEBUG [main] (DefaultSingletonBeanRegistry.java:220) - Creating shared instance of singleton bean 'naiveWaiter'
2017-08-13 14:40:57,506 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'naiveWaiter'
2017-08-13 14:40:57,536 DEBUG [main] (ReflectiveAspectJAdvisorFactory.java:221) - Found AspectJ method: public void com.baobaotao.aspectj.fun.TestAspect.allPublicFun()
2017-08-13 14:40:57,537 DEBUG [main] (ReflectiveAspectJAdvisorFactory.java:221) - Found AspectJ method: public void com.baobaotao.aspectj.fun.TestAspect.atAnnotaionTest()
2017-08-13 14:40:57,539 DEBUG [main] (ReflectiveAspectJAdvisorFactory.java:221) - Found AspectJ method: public void com.baobaotao.aspectj.fun.TestAspect.thisTest()
2017-08-13 14:40:57,603 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'naiveWaiter' to allow for resolving potential circular references
2017-08-13 14:40:57,677 DEBUG [main] (DefaultSingletonBeanRegistry.java:220) - Creating shared instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:57,677 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:57,677 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'com.baobaotao.aspectj.fun.TestAspect#0' to allow for resolving potential circular references
2017-08-13 14:40:57,679 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:477) - Finished creating instance of bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:57,679 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:57,679 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:57,679 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:57,680 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:57,680 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:57,681 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:57,681 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:57,681 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:57,681 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:57,682 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:57,682 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:57,685 DEBUG [main] (AbstractAutoProxyCreator.java:593) - Creating implicit proxy for bean 'naiveWaiter' with 0 common interceptors and 5 specific interceptors
2017-08-13 14:40:57,689 DEBUG [main] (CglibAopProxy.java:158) - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.baobaotao.NaiveWaiter@2c767a52]
2017-08-13 14:40:57,758 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public void com.baobaotao.NaiveWaiter.serveTo(java.lang.String)
2017-08-13 14:40:57,759 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public void com.baobaotao.NaiveWaiter.smile(java.lang.String,int)
2017-08-13 14:40:57,760 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public void com.baobaotao.NaiveWaiter.greetTo(java.lang.String)
2017-08-13 14:40:57,760 DEBUG [main] (CglibAopProxy.java:773) - Found finalize() method - using NO_OVERRIDE
2017-08-13 14:40:57,761 DEBUG [main] (CglibAopProxy.java:785) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-08-13 14:40:57,763 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-08-13 14:40:57,763 DEBUG [main] (CglibAopProxy.java:790) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-08-13 14:40:57,764 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-08-13 14:40:57,766 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public abstract int com.baobaotao.Seller.sell(java.lang.String,java.lang.String)
2017-08-13 14:40:57,766 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-08-13 14:40:57,766 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-08-13 14:40:57,766 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-08-13 14:40:57,767 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-08-13 14:40:57,767 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-08-13 14:40:57,767 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:57,767 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:57,768 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-08-13 14:40:57,768 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-08-13 14:40:57,768 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-08-13 14:40:57,768 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-08-13 14:40:57,769 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:57,769 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:57,769 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-08-13 14:40:57,769 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-08-13 14:40:57,769 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-08-13 14:40:57,770 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-08-13 14:40:57,770 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:57,770 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:57,770 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-08-13 14:40:57,770 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-08-13 14:40:57,771 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-08-13 14:40:57,771 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-08-13 14:40:57,789 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:477) - Finished creating instance of bean 'naiveWaiter'
2017-08-13 14:40:57,790 DEBUG [main] (DefaultSingletonBeanRegistry.java:220) - Creating shared instance of singleton bean 'naughtyWaiter'
2017-08-13 14:40:57,790 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'naughtyWaiter'
2017-08-13 14:40:57,790 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'naughtyWaiter' to allow for resolving potential circular references
2017-08-13 14:40:57,798 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:57,798 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:57,798 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:57,799 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:57,799 DEBUG [main] (AbstractAutoProxyCreator.java:593) - Creating implicit proxy for bean 'naughtyWaiter' with 0 common interceptors and 3 specific interceptors
2017-08-13 14:40:57,799 DEBUG [main] (CglibAopProxy.java:158) - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.baobaotao.NaughtyWaiter@2aceadd4]
2017-08-13 14:40:57,800 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public void com.baobaotao.NaughtyWaiter.serveTo(java.lang.String)
2017-08-13 14:40:57,800 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public void com.baobaotao.NaughtyWaiter.greetTo(java.lang.String)
2017-08-13 14:40:57,801 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public void com.baobaotao.NaughtyWaiter.joke(java.lang.String,int)
2017-08-13 14:40:57,801 DEBUG [main] (CglibAopProxy.java:773) - Found finalize() method - using NO_OVERRIDE
2017-08-13 14:40:57,801 DEBUG [main] (CglibAopProxy.java:785) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-08-13 14:40:57,801 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-08-13 14:40:57,801 DEBUG [main] (CglibAopProxy.java:790) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-08-13 14:40:57,801 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-08-13 14:40:57,802 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-08-13 14:40:57,802 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-08-13 14:40:57,802 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-08-13 14:40:57,802 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-08-13 14:40:57,805 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-08-13 14:40:57,805 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:57,806 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:57,806 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-08-13 14:40:57,806 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-08-13 14:40:57,806 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-08-13 14:40:57,806 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-08-13 14:40:57,806 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:57,806 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:57,806 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-08-13 14:40:57,807 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-08-13 14:40:57,807 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-08-13 14:40:57,807 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-08-13 14:40:57,807 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:57,807 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:57,807 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-08-13 14:40:57,807 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-08-13 14:40:57,808 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-08-13 14:40:57,808 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-08-13 14:40:57,815 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:477) - Finished creating instance of bean 'naughtyWaiter'
2017-08-13 14:40:57,815 DEBUG [main] (DefaultSingletonBeanRegistry.java:220) - Creating shared instance of singleton bean 'seller'
2017-08-13 14:40:57,815 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'seller'
2017-08-13 14:40:57,816 DEBUG [main] (AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'seller' to allow for resolving potential circular references
2017-08-13 14:40:57,821 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:57,821 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:57,822 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:57,822 DEBUG [main] (AbstractBeanFactory.java:247) - Returning cached instance of singleton bean 'com.baobaotao.aspectj.fun.TestAspect#0'
2017-08-13 14:40:57,823 DEBUG [main] (AbstractAutoProxyCreator.java:593) - Creating implicit proxy for bean 'seller' with 0 common interceptors and 3 specific interceptors
2017-08-13 14:40:57,824 DEBUG [main] (CglibAopProxy.java:158) - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.baobaotao.SmartSeller@63475ace]
2017-08-13 14:40:57,825 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public int com.baobaotao.SmartSeller.sell(java.lang.String,java.lang.String)
2017-08-13 14:40:57,825 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public void com.baobaotao.SmartSeller.checkBill(int)
2017-08-13 14:40:57,826 DEBUG [main] (CglibAopProxy.java:773) - Found finalize() method - using NO_OVERRIDE
2017-08-13 14:40:57,826 DEBUG [main] (CglibAopProxy.java:785) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-08-13 14:40:57,826 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-08-13 14:40:57,826 DEBUG [main] (CglibAopProxy.java:790) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-08-13 14:40:57,827 DEBUG [main] (CglibAopProxy.java:822) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-08-13 14:40:57,827 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-08-13 14:40:57,827 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-08-13 14:40:57,828 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-08-13 14:40:57,828 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-08-13 14:40:57,828 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-08-13 14:40:57,828 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:57,828 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-08-13 14:40:57,829 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-08-13 14:40:57,829 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-08-13 14:40:57,830 DEBUG [main] (CglibAopProxy.java:779) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
